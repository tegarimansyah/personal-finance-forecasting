package main

import (
	"fmt"

	"github.com/BurntSushi/toml"
)

// MonthlyBudget describe single entity struct
type MonthlyBudget []struct {
	Name  string `toml:"name"`
	Value int    `toml:"value"`
}

// Toml to Go auto generated by https://xuri.me/toml-to-go/
type tomlConfig struct {
	Title        string `toml:"title"`
	InitialValue int    `toml:"initial_value"`
	InitialMonth string `toml:"initial_month"`
	LastMonth    string `toml:"last_month"`
	Monthly      struct {
		Income  MonthlyBudget `toml:"income"`
		Expense MonthlyBudget `toml:"expense"`
	} `toml:"monthly"`
}

func sum(budgets MonthlyBudget) int {
	sumValue := 0
	for _, budget := range budgets {
		sumValue += budget.Value
	}
	return sumValue
}

func main() {
	var config tomlConfig
	if _, err := toml.DecodeFile("plan1.toml", &config); err != nil {
		fmt.Println(err)
		return
	}
	fmt.Printf("Forecast Report for: %s\n", config.Title)

	monthlyIncomeSum := sum(config.Monthly.Income)
	monthlyExpenseSum := sum(config.Monthly.Expense)

	fmt.Printf("%d - %d = %d", monthlyIncomeSum, monthlyExpenseSum, monthlyIncomeSum-monthlyExpenseSum)

}
